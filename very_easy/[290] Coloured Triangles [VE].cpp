/*
####  Coloured Triangles  ####

A coloured triangle is created from different rows of colours (Red, Green or Blue). Successive rows, each containing one fewer colour than the last, are generated by considering the two touching colours in the previous row. If these colours are identical, the same colour is used in the new row. If colours are different, the missing colour is used in the new row. This process continues untill a single colour is generated in the final row.
Different possibilities of colours are:
___
Colours Touching:        G G        B G        R G        B R
New colour:               G          R          B          G
_____

With a bigger example:
___
R R G B R G B B
 R B R G B R B
  G G B R G G
   G R G B G
    B B R R
     B G R
      R B
       G
_____



[Goal]

___
*) Create a function which takes first row of the triangle as an input and returns the final colour which would appear at the bottom row. In above example, given input "RRGBRGBB" will return "G".
*) If you are only given one colour as the input, return that colour.
*) There will be no exception handling case.
___



[Examples]

___
colouredTriangle("B") ➞ "B"

colouredTriangle("GB") ➞ "R"

colouredTriangle("RBRGBRB") ➞ "G"
_____



[Notes]

N/A


[games] [language_fundamentals] [strings] 



-------------------------------------------------------------------
[Resources]
_________
std::string::at
http://www.cplusplus.com/reference/string/string/at/
Returns a reference to the character at position pos in the string. The function automatically checks whether pos is the valid position of a character in the string (i …
_________
_________
string::length
https://www.cplusplus.com/reference/string/string/length/
Returns the length of the string, in terms of bytes. This is the number of actual bytes that conform the contents of the string, which is not necessarily equal to its …
_________

*/
//Your code should go here:

